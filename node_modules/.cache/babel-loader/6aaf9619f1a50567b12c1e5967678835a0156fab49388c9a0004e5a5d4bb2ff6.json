{"ast":null,"code":"// Resize image to max 1080x1920 and convert to base64\nexport const resizeImage = (file, maxWidth = 1080, maxHeight = 1920) => {\n  return new Promise(resolve => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      let {\n        width,\n        height\n      } = img;\n\n      // Calculate new dimensions maintaining aspect ratio\n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n        width *= ratio;\n        height *= ratio;\n      }\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, width, height);\n      resolve(canvas.toDataURL('image/jpeg', 0.8));\n    };\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n// Check if story is expired (older than 24 hours)\nexport const isStoryExpired = timestamp => {\n  const now = Date.now();\n  const twentyFourHours = 24 * 60 * 60 * 1000;\n  return now - timestamp > twentyFourHours;\n};\n\n// Clean expired stories from localStorage\nexport const cleanExpiredStories = () => {\n  const stories = JSON.parse(localStorage.getItem('stories') || '[]');\n  const validStories = stories.filter(story => !isStoryExpired(story.timestamp));\n  localStorage.setItem('stories', JSON.stringify(validStories));\n  return validStories;\n};","map":{"version":3,"names":["resizeImage","file","maxWidth","maxHeight","Promise","resolve","canvas","document","createElement","ctx","getContext","img","Image","onload","width","height","ratio","Math","min","drawImage","toDataURL","src","URL","createObjectURL","isStoryExpired","timestamp","now","Date","twentyFourHours","cleanExpiredStories","stories","JSON","parse","localStorage","getItem","validStories","filter","story","setItem","stringify"],"sources":["C:/Users/pmakwatse/React w Tailwind Projects/24h Story Feature/src/utils/imageUtils.js"],"sourcesContent":["// Resize image to max 1080x1920 and convert to base64\nexport const resizeImage = (file, maxWidth = 1080, maxHeight = 1920) => {\n  return new Promise((resolve) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    \n    img.onload = () => {\n      let { width, height } = img;\n      \n      // Calculate new dimensions maintaining aspect ratio\n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n        width *= ratio;\n        height *= ratio;\n      }\n      \n      canvas.width = width;\n      canvas.height = height;\n      \n      ctx.drawImage(img, 0, 0, width, height);\n      resolve(canvas.toDataURL('image/jpeg', 0.8));\n    };\n    \n    img.src = URL.createObjectURL(file);\n  });\n};\n\n// Check if story is expired (older than 24 hours)\nexport const isStoryExpired = (timestamp) => {\n  const now = Date.now();\n  const twentyFourHours = 24 * 60 * 60 * 1000;\n  return now - timestamp > twentyFourHours;\n};\n\n// Clean expired stories from localStorage\nexport const cleanExpiredStories = () => {\n  const stories = JSON.parse(localStorage.getItem('stories') || '[]');\n  const validStories = stories.filter(story => !isStoryExpired(story.timestamp));\n  localStorage.setItem('stories', JSON.stringify(validStories));\n  return validStories;\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAGA,CAACC,IAAI,EAAEC,QAAQ,GAAG,IAAI,EAAEC,SAAS,GAAG,IAAI,KAAK;EACtE,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IAEvBD,GAAG,CAACE,MAAM,GAAG,MAAM;MACjB,IAAI;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGJ,GAAG;;MAE3B;MACA,IAAIG,KAAK,GAAGZ,QAAQ,IAAIa,MAAM,GAAGZ,SAAS,EAAE;QAC1C,MAAMa,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAChB,QAAQ,GAAGY,KAAK,EAAEX,SAAS,GAAGY,MAAM,CAAC;QAC5DD,KAAK,IAAIE,KAAK;QACdD,MAAM,IAAIC,KAAK;MACjB;MAEAV,MAAM,CAACQ,KAAK,GAAGA,KAAK;MACpBR,MAAM,CAACS,MAAM,GAAGA,MAAM;MAEtBN,GAAG,CAACU,SAAS,CAACR,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEG,KAAK,EAAEC,MAAM,CAAC;MACvCV,OAAO,CAACC,MAAM,CAACc,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEDT,GAAG,CAACU,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACtB,IAAI,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMuB,cAAc,GAAIC,SAAS,IAAK;EAC3C,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;EACtB,MAAME,eAAe,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;EAC3C,OAAOF,GAAG,GAAGD,SAAS,GAAGG,eAAe;AAC1C,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACvC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;EACnE,MAAMC,YAAY,GAAGL,OAAO,CAACM,MAAM,CAACC,KAAK,IAAI,CAACb,cAAc,CAACa,KAAK,CAACZ,SAAS,CAAC,CAAC;EAC9EQ,YAAY,CAACK,OAAO,CAAC,SAAS,EAAEP,IAAI,CAACQ,SAAS,CAACJ,YAAY,CAAC,CAAC;EAC7D,OAAOA,YAAY;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}