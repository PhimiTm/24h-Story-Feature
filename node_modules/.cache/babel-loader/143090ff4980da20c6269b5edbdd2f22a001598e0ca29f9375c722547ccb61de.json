{"ast":null,"code":"const API_BASE = '/api';\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\nexport const api = {\n  // Auth\n  register: async userData => {\n    const response = await fetch(`${API_BASE}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    return response.json();\n  },\n  login: async credentials => {\n    const response = await fetch(`${API_BASE}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    return response.json();\n  },\n  // Stories\n  getStories: async () => {\n    const response = await fetch(`${API_BASE}/stories`, {\n      headers: getAuthHeaders()\n    });\n    return response.json();\n  },\n  uploadStory: async (imageBase64, caption) => {\n    const response = await fetch(`${API_BASE}/stories`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify({\n        imageBase64,\n        caption\n      })\n    });\n    return response.json();\n  },\n  markStoryViewed: async storyId => {\n    const response = await fetch(`${API_BASE}/stories/${storyId}/view`, {\n      method: 'POST',\n      headers: getAuthHeaders()\n    });\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_BASE","getAuthHeaders","token","localStorage","getItem","Authorization","api","register","userData","response","fetch","method","headers","body","JSON","stringify","json","login","credentials","getStories","uploadStory","imageBase64","caption","markStoryViewed","storyId"],"sources":["C:/Users/pmakwatse/React w Tailwind Projects/24h Story Feature/src/utils/api.js"],"sourcesContent":["const API_BASE = '/api';\n\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return token ? { Authorization: `Bearer ${token}` } : {};\n};\n\nexport const api = {\n  // Auth\n  register: async (userData) => {\n    const response = await fetch(`${API_BASE}/auth/register`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(userData)\n    });\n    return response.json();\n  },\n\n  login: async (credentials) => {\n    const response = await fetch(`${API_BASE}/auth/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(credentials)\n    });\n    return response.json();\n  },\n\n  // Stories\n  getStories: async () => {\n    const response = await fetch(`${API_BASE}/stories`, {\n      headers: getAuthHeaders()\n    });\n    return response.json();\n  },\n\n  uploadStory: async (imageBase64, caption) => {\n    const response = await fetch(`${API_BASE}/stories`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeaders()\n      },\n      body: JSON.stringify({ imageBase64, caption })\n    });\n    return response.json();\n  },\n\n  markStoryViewed: async (storyId) => {\n    const response = await fetch(`${API_BASE}/stories/${storyId}/view`, {\n      method: 'POST',\n      headers: getAuthHeaders()\n    });\n    return response.json();\n  }\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAM;AAEvB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOF,KAAK,GAAG;IAAEG,aAAa,EAAE,UAAUH,KAAK;EAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMI,GAAG,GAAG;EACjB;EACAC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,gBAAgB,EAAE;MACxDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,aAAa,EAAE;MACrDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,WAAW;IAClC,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAG,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,UAAU,EAAE;MAClDY,OAAO,EAAEX,cAAc,CAAC;IAC1B,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDI,WAAW,EAAE,MAAAA,CAAOC,WAAW,EAAEC,OAAO,KAAK;IAC3C,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,UAAU,EAAE;MAClDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,GAAGX,cAAc,CAAC;MACpB,CAAC;MACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEM,WAAW;QAAEC;MAAQ,CAAC;IAC/C,CAAC,CAAC;IACF,OAAOb,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDO,eAAe,EAAE,MAAOC,OAAO,IAAK;IAClC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,YAAYwB,OAAO,OAAO,EAAE;MAClEb,MAAM,EAAE,MAAM;MACdC,OAAO,EAAEX,cAAc,CAAC;IAC1B,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}