{"ast":null,"code":"// Resize image to max 1080x1920 and convert to base64\nexport const resizeImage = (file, maxWidth = 1080, maxHeight = 1920) => {\n  return new Promise(resolve => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      let {\n        width,\n        height\n      } = img;\n\n      // Calculate new dimensions maintaining aspect ratio\n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n        width *= ratio;\n        height *= ratio;\n      }\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, width, height);\n      resolve(canvas.toDataURL('image/jpeg', 0.8));\n    };\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n// Group stories by user\nexport const groupStoriesByUser = stories => {\n  const grouped = {};\n  stories.forEach(story => {\n    if (!grouped[story.user_id]) {\n      grouped[story.user_id] = {\n        username: story.username,\n        stories: []\n      };\n    }\n    grouped[story.user_id].stories.push(story);\n  });\n  return grouped;\n};","map":{"version":3,"names":["resizeImage","file","maxWidth","maxHeight","Promise","resolve","canvas","document","createElement","ctx","getContext","img","Image","onload","width","height","ratio","Math","min","drawImage","toDataURL","src","URL","createObjectURL","groupStoriesByUser","stories","grouped","forEach","story","user_id","username","push"],"sources":["C:/Users/pmakwatse/React w Tailwind Projects/24h Story Feature/src/utils/imageUtils.js"],"sourcesContent":["// Resize image to max 1080x1920 and convert to base64\nexport const resizeImage = (file, maxWidth = 1080, maxHeight = 1920) => {\n  return new Promise((resolve) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    \n    img.onload = () => {\n      let { width, height } = img;\n      \n      // Calculate new dimensions maintaining aspect ratio\n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n        width *= ratio;\n        height *= ratio;\n      }\n      \n      canvas.width = width;\n      canvas.height = height;\n      \n      ctx.drawImage(img, 0, 0, width, height);\n      resolve(canvas.toDataURL('image/jpeg', 0.8));\n    };\n    \n    img.src = URL.createObjectURL(file);\n  });\n};\n\n// Group stories by user\nexport const groupStoriesByUser = (stories) => {\n  const grouped = {};\n  stories.forEach(story => {\n    if (!grouped[story.user_id]) {\n      grouped[story.user_id] = {\n        username: story.username,\n        stories: []\n      };\n    }\n    grouped[story.user_id].stories.push(story);\n  });\n  return grouped;\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAGA,CAACC,IAAI,EAAEC,QAAQ,GAAG,IAAI,EAAEC,SAAS,GAAG,IAAI,KAAK;EACtE,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IAEvBD,GAAG,CAACE,MAAM,GAAG,MAAM;MACjB,IAAI;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGJ,GAAG;;MAE3B;MACA,IAAIG,KAAK,GAAGZ,QAAQ,IAAIa,MAAM,GAAGZ,SAAS,EAAE;QAC1C,MAAMa,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAChB,QAAQ,GAAGY,KAAK,EAAEX,SAAS,GAAGY,MAAM,CAAC;QAC5DD,KAAK,IAAIE,KAAK;QACdD,MAAM,IAAIC,KAAK;MACjB;MAEAV,MAAM,CAACQ,KAAK,GAAGA,KAAK;MACpBR,MAAM,CAACS,MAAM,GAAGA,MAAM;MAEtBN,GAAG,CAACU,SAAS,CAACR,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEG,KAAK,EAAEC,MAAM,CAAC;MACvCV,OAAO,CAACC,MAAM,CAACc,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEDT,GAAG,CAACU,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACtB,IAAI,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMuB,kBAAkB,GAAIC,OAAO,IAAK;EAC7C,MAAMC,OAAO,GAAG,CAAC,CAAC;EAClBD,OAAO,CAACE,OAAO,CAACC,KAAK,IAAI;IACvB,IAAI,CAACF,OAAO,CAACE,KAAK,CAACC,OAAO,CAAC,EAAE;MAC3BH,OAAO,CAACE,KAAK,CAACC,OAAO,CAAC,GAAG;QACvBC,QAAQ,EAAEF,KAAK,CAACE,QAAQ;QACxBL,OAAO,EAAE;MACX,CAAC;IACH;IACAC,OAAO,CAACE,KAAK,CAACC,OAAO,CAAC,CAACJ,OAAO,CAACM,IAAI,CAACH,KAAK,CAAC;EAC5C,CAAC,CAAC;EACF,OAAOF,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}