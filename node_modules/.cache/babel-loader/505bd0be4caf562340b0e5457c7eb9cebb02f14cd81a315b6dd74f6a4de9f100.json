{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmakwatse\\\\React w Tailwind Projects\\\\24h Story Feature\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StoriesBar from './components/StoriesBar';\nimport StoryViewer from './components/StoryViewer';\nimport { resizeImage, cleanExpiredStories } from './utils/imageUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [viewerOpen, setViewerOpen] = useState(false);\n  const [viewerIndex, setViewerIndex] = useState(0);\n\n  // Load stories on mount and clean expired ones\n  useEffect(() => {\n    const validStories = cleanExpiredStories();\n    setStories(validStories);\n  }, []);\n  const handleAddStory = async file => {\n    try {\n      const resizedImage = await resizeImage(file);\n      const newStory = {\n        id: Date.now(),\n        image: resizedImage,\n        timestamp: Date.now()\n      };\n      const updatedStories = [...stories, newStory];\n      setStories(updatedStories);\n      localStorage.setItem('stories', JSON.stringify(updatedStories));\n    } catch (error) {\n      console.error('Error adding story:', error);\n    }\n  };\n  const handleStoryClick = index => {\n    setViewerIndex(index);\n    setViewerOpen(true);\n  };\n  const handleCloseViewer = () => {\n    setViewerOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white dark:bg-gray-900\",\n    children: [/*#__PURE__*/_jsxDEV(StoriesBar, {\n      stories: stories,\n      onAddStory: handleAddStory,\n      onStoryClick: handleStoryClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900 dark:text-white mb-4\",\n        children: \"24-Hour Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 dark:text-gray-400\",\n        children: \"Share moments that disappear after 24 hours. Click the + button to add your story.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), viewerOpen && /*#__PURE__*/_jsxDEV(StoryViewer, {\n      stories: stories,\n      initialIndex: viewerIndex,\n      onClose: handleCloseViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uIVRCfmzEkfMnwNAzQ7wXUtyyhY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","StoriesBar","StoryViewer","resizeImage","cleanExpiredStories","jsxDEV","_jsxDEV","App","_s","stories","setStories","viewerOpen","setViewerOpen","viewerIndex","setViewerIndex","validStories","handleAddStory","file","resizedImage","newStory","id","Date","now","image","timestamp","updatedStories","localStorage","setItem","JSON","stringify","error","console","handleStoryClick","index","handleCloseViewer","className","children","onAddStory","onStoryClick","fileName","_jsxFileName","lineNumber","columnNumber","initialIndex","onClose","_c","$RefreshReg$"],"sources":["C:/Users/pmakwatse/React w Tailwind Projects/24h Story Feature/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StoriesBar from './components/StoriesBar';\nimport StoryViewer from './components/StoryViewer';\nimport { resizeImage, cleanExpiredStories } from './utils/imageUtils';\n\nfunction App() {\n  const [stories, setStories] = useState([]);\n  const [viewerOpen, setViewerOpen] = useState(false);\n  const [viewerIndex, setViewerIndex] = useState(0);\n\n  // Load stories on mount and clean expired ones\n  useEffect(() => {\n    const validStories = cleanExpiredStories();\n    setStories(validStories);\n  }, []);\n\n  const handleAddStory = async (file) => {\n    try {\n      const resizedImage = await resizeImage(file);\n      const newStory = {\n        id: Date.now(),\n        image: resizedImage,\n        timestamp: Date.now()\n      };\n\n      const updatedStories = [...stories, newStory];\n      setStories(updatedStories);\n      localStorage.setItem('stories', JSON.stringify(updatedStories));\n    } catch (error) {\n      console.error('Error adding story:', error);\n    }\n  };\n\n  const handleStoryClick = (index) => {\n    setViewerIndex(index);\n    setViewerOpen(true);\n  };\n\n  const handleCloseViewer = () => {\n    setViewerOpen(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900\">\n      <StoriesBar \n        stories={stories}\n        onAddStory={handleAddStory}\n        onStoryClick={handleStoryClick}\n      />\n      \n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n          24-Hour Stories\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Share moments that disappear after 24 hours. Click the + button to add your story.\n        </p>\n      </div>\n\n      {viewerOpen && (\n        <StoryViewer\n          stories={stories}\n          initialIndex={viewerIndex}\n          onClose={handleCloseViewer}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}